latex_table <- xtable(df_Bel_head)
digits(latex_table) <- c(0, rep(0, ncol(df_Bel_head)))
# Print the LaTeX table code
print(latex_table, include.rownames = FALSE)
Death_V1 <- Death  %>% filter((Year == year)) %>%
mutate (Age = as.numeric(Age)) %>%
filter(Age >= 30 & Age < 105) %>% select(Age, Year, Total) %>% rename(Dx = Total)
Ec_V1 <- Ec  %>% filter((Year == 2000)) %>%
mutate (Age = as.numeric(Age)) %>%
filter(Age >= 30 & Age < 105) %>% select(Age, Year, Total) %>% rename(ExC = Total)
df_Bel <- Ec_V1 %>% left_join(Death_V1)
# Load the xtable library
library(xtable)
# Create a subset of the first few rows of the dataframe
df_Bel_head <- head(df_Bel)
# Convert the dataframe into a LaTeX table
latex_table <- xtable(df_Bel_head)
digits(latex_table) <- c(0, rep(0, ncol(df_Bel_head)))
# Print the LaTeX table code
print(latex_table, include.rownames = FALSE)
df_Bel_V1 <- df_Bel %>% mutate(mux = Dx / ExC, logx = log(Age), logmux = log(mux))
ggplot(data = df_Bel_V1) +
geom_line(mapping = aes(x = Age, y = mux)) +
labs(
x = "Age",
y = expression(mu[x]) # LaTeX-style y-axis label
) +
theme_minimal() + # Apply minimal theme
theme(
axis.title = element_text(size = 14), # Increase axis label font size
axis.text = element_text(size = 12)  # Increase tick labels font size
)
ggsave(filename = "mux_raw.pdf")
ggplot(data = df_Bel_V1) +
geom_line(mapping = aes(x = Age, y = mux)) +
labs(
x = "Age",
y = expression(mu[x]) # LaTeX-style y-axis label
) +
theme_minimal() + # Apply minimal theme
theme(
axis.title = element_text(size = 16), # Increase axis label font size
axis.text = element_text(size = 14)  # Increase tick labels font size
)
ggsave(filename = "mux_raw.pdf")
ggplot(data = df_Bel_V1) +
geom_line(mapping = aes(x = Age, y = mux)) +
labs(
x = "Age",
y = expression(mu[x]) # LaTeX-style y-axis label
) +
theme_minimal() + # Apply minimal theme
theme(
axis.title = element_text(size = 20), # Increase axis label font size
axis.text = element_text(size = 18)  # Increase tick labels font size
)
ggsave(filename = "mux_raw.pdf")
ggplot(data = df_Bel_V1) +
geom_line(mapping = aes(x = Age, y = mux)) +
labs(
x = "Age",
y = expression(mu[x]) # LaTeX-style y-axis label
) +
theme_minimal() + # Apply minimal theme
theme(
axis.title = element_text(size = 20), # Increase axis label font size
axis.text = element_text(size = 18)  # Increase tick labels font size
)
ggsave(filename = "mux_raw.pdf")
ggplot(data = df_Bel_V1) +
geom_line(mapping = aes(x = Age, y = mux)) +
labs(
x = "Age",
y = expression(mu[x]) # LaTeX-style y-axis label
) +
theme_minimal() + # Apply minimal theme
theme(
axis.title = element_text(size = 24), # Increase axis label font size
axis.text = element_text(size = 22)  # Increase tick labels font size
)
ggsave(filename = "mux_raw.pdf")
ggsave(filename = "figures/mux_raw.pdf")
ggplot(data = df_Bel_V1) +
geom_line(mapping = aes(x = Age, y = mux)) +
labs(
x = "Age",
y = expression(mu[x]) # LaTeX-style y-axis label
) +
theme_minimal() + # Apply minimal theme
theme(
axis.title = element_text(size = 32), # Increase axis label font size
axis.text = element_text(size = 28)  # Increase tick labels font size
)
ggsave(filename = "figures/mux_raw.pdf")
ggplot(data = df_Bel_V1) + geom_line(mapping = aes(x = logx, y = logmux)) +
labs(
x = "Age",
y = expression(mu[x]) # LaTeX-style y-axis label
) +
theme_minimal() + # Apply minimal theme
theme(
axis.title = element_text(size = 32), # Increase axis label font size
axis.text = element_text(size = 28)  # Increase tick labels font size
)
ggplot(data = df_Bel_V1) + geom_line(mapping = aes(x = logx, y = logmux)) +
labs(
x = "Age",
y = expression(mu[x]) # LaTeX-style y-axis label
) +
theme_minimal() + # Apply minimal theme
theme(
axis.title = element_text(size = 32), # Increase axis label font size
axis.text = element_text(size = 28)  # Increase tick labels font size
)
ggsave(filename = "figures/mux_raw.pdf")
ggplot(data = df_Bel_V1) +
geom_line(mapping = aes(x = Age, y = mux)) +
labs(
x = "x",
y = expression(mu[x]) # LaTeX-style y-axis label
) +
theme_minimal() + # Apply minimal theme
theme(
axis.title = element_text(size = 32), # Increase axis label font size
axis.text = element_text(size = 28)  # Increase tick labels font size
)
ggsave(filename = "figures/mux_raw.pdf")
ggplot(data = df_Bel_V1) + geom_line(mapping = aes(x = logx, y = logmux)) +
ggplot(data = df_Bel_V1) + geom_line(mapping = aes(x = logx, y = logmux)) +
labs(
x = "log(x)",
y = expression(log(mu[x]) # LaTeX-style y-axis label
)) +
theme_minimal() + # Apply minimal theme
theme(
axis.title = element_text(size = 32), # Increase axis label font size
axis.text = element_text(size = 28)  # Increase tick labels font size
)
ggplot(data = df_Bel_V1) + geom_line(mapping = aes(x = logx, y = logmux)) +
labs(
x = "log(x)",
y = expression(log(mu[x]) # LaTeX-style y-axis label
)) +
theme_minimal() + # Apply minimal theme
theme(
axis.title = element_text(size = 32), # Increase axis label font size
axis.text = element_text(size = 28)  # Increase tick labels font size
)
ggsave(filename = "figures/log_mux_raw.pdf")
df_Bel_V1 <- df_Bel %>% mutate(mux = Dx / ExC, logx = log(Age), logmux = log(mux))
res_lm <- lm(logmux ~ logx, data = df_Bel)
df_Bel_V1 <- df_Bel %>% mutate(mux = Dx / ExC, logx = log(Age), logmux = log(mux))
res_lm <- lm(logmux ~ logx, data = df_Bel_V1)
res_lm
ggplot(data = df_Bel_V1) +
geom_point(mapping = aes(x = Age, y = mux)) +
labs(
x = "x",
y = expression(mu[x]) # LaTeX-style y-axis label
) +
theme_minimal() + # Apply minimal theme
theme(
axis.title = element_text(size = 32), # Increase axis label font size
axis.text = element_text(size = 28)  # Increase tick labels font size
)
ggsave(filename = "figures/mux_raw.pdf")
ggplot(data = df_Bel_V1) + geom_point(mapping = aes(x = logx, y = logmux)) +
labs(
x = "log(x)",
y = expression(log(mu[x]) # LaTeX-style y-axis label
)) +
theme_minimal() + # Apply minimal theme
theme(
axis.title = element_text(size = 32), # Increase axis label font size
axis.text = element_text(size = 28)  # Increase tick labels font size
)
ggsave(filename = "figures/log_mux_raw.pdf")
res
res <- lm(logmux ~ logx, data = df_Bel_V1)
res
df_Bel_smooth <- df_Bel %>% mutate( mux_smooth = ( alpha / beta) * (Age / beta)^(alpha - 1))
ggplot(data = df_Bel_smooth) + geom_line(mapping = aes(x = Age, y = mux_smooth)) + geom_point(mapping = aes(x = Age, y = mux))
df_Bel_smooth <- df_Bel %>% mutate( mux_smooth = ( alpha / beta) * (Age / beta)^(alpha - 1))
inter <- as.numeric(res$coefficients[1]); slope <- as.numeric(res$coefficients[2])
alpha <- slope + 1; beta <- exp((log(alpha) - inter) / alpha)
df_Bel_smooth <- df_Bel %>% mutate( mux_smooth = ( alpha / beta) * (Age / beta)^(alpha - 1))
ggplot(data = df_Bel_smooth) + geom_line(mapping = aes(x = Age, y = mux_smooth)) + geom_point(mapping = aes(x = Age, y = mux))
df_Bel_smooth <- df_Bel_V1 %>% mutate( mux_smooth = ( alpha / beta) * (Age / beta)^(alpha - 1))
ggplot(data = df_Bel_smooth) + geom_line(mapping = aes(x = Age, y = mux_smooth)) + geom_point(mapping = aes(x = Age, y = mux))
ggsave(filename = "figures/mux_raw_VS_smoothed.pdf")
ggplot(data = df_Bel_smooth) + geom_line(mapping = aes(x = Age, y = mux_smooth)) +
geom_point(mapping = aes(x = Age, y = mux)) +
labs(
x = "x",
y = expression(mu[x]) # LaTeX-style y-axis label
) +
theme_minimal() + # Apply minimal theme
theme(
axis.title = element_text(size = 32), # Increase axis label font size
axis.text = element_text(size = 28)  # Increase tick labels font size
)
ggsave(filename = "figures/mux_raw_VS_smoothed.pdf")
res_binom_test <- binom.test(sum(df_Bel_smooth$mux > df_Bel_smooth$mux_smooth),
nrow(df_Bel_smooth), p=0.5)
res_binom_test
# Exo 3 Etude du maintien en incapacité en fonction de l'âge et du sexe
set.seed(1234)
age <- as.integer(pmin(pmax(rnorm(100, mean = 45,sd= 20), 25), 60))
gender <- rbinom(100, size = 1, p = 0.4)
status <- rbinom(100, size = 1, p = 0.9)
beta_0 <- -2  # Example value
beta_1 <- 0.05  # Linear effect of age
beta_2 <- 0  # Quadratic effect of age
rates <- exp(beta_0 + beta_1 * age + beta_2 * age^2)
df_incap <- data.frame(time = sapply(rates, function(x)
rexp(1, rate = x)),
status = as.integer(status),
age = age,
gender = gender)
df_incap$gender <- as.factor(df_incap$gender)
library(survival)
library(survminer)
library(xtable)
xtable(head(df_incap))
help(xtable)
fit <- survfit(Surv(time, status) ~  gender, data = df_incap)
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE,
ggtheme = theme_bw(),
linetype = "strata"# Change ggplot2 theme
)
surv_diff <- survdiff(Surv(time, status) ~ gender, data = df_incap)
surv_diff
res.cox <- coxph(Surv(time, status) ~ age + gender, data = df_incap)
res.cox
summary(res.cox)
test.ph <- cox.zph(res.cox)
test.ph
ggcoxzph(test.ph)
# Exo 3 Etude du maintien en incapacité en fonction de l'âge et du sexe
set.seed(1234)
age <- as.integer(pmin(pmax(rnorm(100, mean = 45,sd= 20), 25), 60))
rates <- exp(beta_0 + beta_1 * age)
age <- as.integer(pmin(pmax(rnorm(100, mean = 45,sd= 20), 25), 60))
# gender <- rbinom(100, size = 1, p = 0.4)
status <- rbinom(100, size = 1, p = 0.9)
beta_0 <- -2  # Example value
beta_1 <- 0.05  # Linear effect of age
rates <- exp(beta_0 + beta_1 * age)
# Exo 3 Etude du maintien en incapacité en fonction de l'âge et du sexe
set.seed(1234)
age <- as.integer(pmin(pmax(rnorm(100, mean = 45,sd= 20), 25), 60))
# gender <- rbinom(100, size = 1, p = 0.4)
status <- rbinom(100, size = 1, p = 0.9)
beta_0 <- -2  # Example value
beta_1 <- 0.05  # Linear effect of age
rates <- exp(beta_0 + beta_1 * age)
df_incap <- data.frame(time = sapply(rates, function(x)
rexp(1, rate = x)),
status = as.integer(status),
age = age)
df_incap$status <- as.factor(df_incap$status)
library(survival)
library(survminer)
library(xtable)
xtable(head(df_incap))
df_incap <- data.frame(time = sapply(rates, function(x)
rexp(1, rate = x)),
status = as.integer(status),
age = age)
library(survival)
library(survminer)
library(xtable)
xtable(head(df_incap))
res.cox <- coxph(Surv(time, status) ~ age, data = df_incap)
res.cox
summary(res.cox)
test.ph <- cox.zph(res.cox)
test.ph
ggcoxzph(test.ph)
scaled_t <- rexp(n)
# Exo 3 Etude du maintien en incapacité en fonction de l'âge et du sexe
set.seed(1234)
n = 200
x <- as.integer(pmin(pmax(rnorm(n, mean = 45,sd= 20), 25), 60))
# gender <- rbinom(100, size = 1, p = 0.4)
status <- rbinom(n, size = 1, p = 0.9)
beta_0 <- -2  # Example value
beta_1 <- 0.05  # Linear effect of age
scaled_t <- rexp(n)
scaled_t
# Exo 3 Etude du maintien en incapacité en fonction de l'âge et du sexe
set.seed(1234)
n = 200
x <- as.integer(pmin(pmax(rnorm(n, mean = 45,sd= 20), 25), 60))
# gender <- rbinom(100, size = 1, p = 0.4)
status <- rbinom(n, size = 1, p = 0.9)
beta_0 <- -2  # Example value
beta_1 <- 0.05  # Linear effect of age
scaled_t <- rexp(n)
df_incap <- data.frame(time = sapply(1:n, function(j)
scaled_t[j] / exp(beta_0 + beta_1 * scaled_t[j] * x[j])),
status = as.integer(status),
x = x)
df_incap
res.cox <- coxph(Surv(time, status) ~ age, data = df_incap)
df <- data.frame(time = sapply(1:n, function(j)
scaled_t[j] / exp(beta_0 + beta_1 * scaled_t[j] * x[j])),
status = as.integer(status),
x = x)
library(survival)
library(survminer)
library(xtable)
res.cox <- coxph(Surv(time, status) ~ x, data = df)
res.cox
summary(res.cox)
test.ph <- cox.zph(res.cox)
test.ph
ggcoxzph(test.ph)
df <- data.frame(time = sapply(1:n, function(j)
scaled_t[j] / exp(beta_0 + beta_1 * exp(scaled_t[j]) * x[j])),
status = as.integer(status),
x = x)
library(survival)
library(survminer)
library(xtable)
xtable(head(df_incap))
res.cox <- coxph(Surv(time, status) ~ x, data = df)
res.cox
summary(res.cox)
res.cox
summary(res.cox)
test.ph <- cox.zph(res.cox)
test.ph
ggcoxzph(test.ph)
# Exo 3 Survie de patients atteint d'un mélanome au Danemark
library(tidyverse)
library(finalfit)
install.packages("finalfit")
glimpse(melanoma)
melanoma <- boot::melanoma #F1 here for help page with data dictionary
glimpse(melanoma)
missing_glimpse(melanoma)
ff_glimpse(melanoma)
# Exo 3 Survie de patients atteint d'un mélanome au Danemark
library(tidyverse)
library(finalfit)
melanoma <- boot::melanoma #F1 here for help page with data dictionary
glimpse(melanoma)
missing_glimpse(melanoma)
ff_glimpse(melanoma)
head(melanoma)
latex_table <- xtable(head(melanoma))
# digits(latex_table) <- c(0, rep(0, ncol(df_Bel_head)))
# Print the LaTeX table code
print(latex_table, include.rownames = FALSE)
melanoma <- boot::melanoma #F1 here for help page with data dictionary
melanoma <- boot::melanoma #F1 here for help page with data dictionary
melanoma
latex_table <- xtable(head(melanoma))
digits(latex_table) <- c(0, rep(0, ncol(df_Bel_head)))
head(melanoma)
c(0, rep(0, ncol(melanoma)))
latex_table <- xtable(head(melanoma))
latex_table
digits(latex_table) <- c(0, c(0,0,0,0,0,2,0))
# Print the LaTeX table code
print(latex_table, include.rownames = FALSE)
melanoma <- melanoma %>%
mutate(
# Overall survival
status_os = if_else(status == 2, 0, # "still alive"
1)
)
fit <- survfit(Surv(time, status_os) ~ ulcer, data = melanoma)
ggsurvplot(fit,
pval = FALSE,
conf.int = TRUE,
risk.table.col = "strata", # Change risk table color by groups
linetype = "strata", # Change line type by groups
# surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
palette = c("#E7B800", "#2E9FDF"))
ggsurvplot(fit,
)
ggsurvplot(fit,
pval = TRUE,
conf.int = TRUE,
# risk.table.col = "strata", # Change risk table color by groups
linetype = "strata", # Change line type by groups
# surv.median.line = "hv", # Specify median survival
ggtheme = theme_minimal(), # Change ggplot2 theme
# palette = c("#E7B800", "#2E9FDF")
)
ggsurvplot(
fit,
pval = TRUE,
# conf.int = TRUE,
linetype = "strata", # Change line type by groups
ggtheme = theme_minimal(), # Change ggplot2 theme
font.main = c(16, "bold"),      # Main title font size and style
font.x = c(14),                # X-axis label font size
font.y = c(14),                # Y-axis label font size
font.tickslab = c(12),         # Tick labels font size
font.legend = c(12)            # Legend text font size
)
ggsurvplot(
fit,
pval = TRUE,
linetype = "strata", # Change line type by groups
ggtheme = theme_minimal(), # Change ggplot2 theme
font.main = c(32, "bold"),      # Main title font size and style
font.x = c(28),                # X-axis label font size
font.y = c(28),                # Y-axis label font size
font.tickslab = c(28),         # Tick labels font size
font.legend = c(28)            # Legend text font size
)
ggsurvplot(
fit,
pval = TRUE,
linetype = "strata", # Change line type by groups
ggtheme = theme_minimal(), # Change ggplot2 theme
font.main = c(32, "bold"),      # Main title font size and style
font.x = c(28),                # X-axis label font size
font.y = c(28),                # Y-axis label font size
font.tickslab = c(28),         # Tick labels font size
font.legend = c(28),
font.pval = c(28, "bold")
)
ggsurvplot(
fit,
pval = TRUE,
linetype = "strata", # Change line type by groups
ggtheme = theme_minimal(), # Change ggplot2 theme
font.main = c(32, "bold"),      # Main title font size and style
font.x = c(28),                # X-axis label font size
font.y = c(28),                # Y-axis label font size
font.tickslab = c(28),         # Tick labels font size
font.legend = c(28),
font.pval = c(28, "bold")
)
fit <- survfit(Surv(time, status_os) ~ ulcer, data = melanoma)
ggsurvplot(
fit, pval = TRUE, linetype = "strata", ggtheme = theme_minimal(),
font.main = c(32, "bold"), font.x = c(28), font.y = c(28),
font.tickslab = c(28),font.legend = c(28), font.pval = c(28, "bold")
)
ggsurvplot(
fit, pval = TRUE, linetype = "strata", ggtheme = theme_minimal(),
font.main = c(32, "bold"), font.x = c(28), font.y = c(28),
font.tickslab = c(28),font.legend = c(28), font.text = c(28, "bold")
)
ggsurvplot(
fit, pval = TRUE, pval.size = 6, linetype = "strata", ggtheme = theme_minimal(),
font.main = c(32, "bold"), font.x = c(28), font.y = c(28),
font.tickslab = c(28),font.legend = c(28), font.text = c(28, "bold")
)
ggsurvplot(
fit, pval = TRUE, pval.size = 6, linetype = "", ggtheme = theme_minimal(),
font.main = c(32, "bold"), font.x = c(28), font.y = c(28),
font.tickslab = c(28),font.legend = c(28), font.text = c(28, "bold")
)
ggsurvplot(
fit, pval = TRUE, pval.size = 6, linetype = " ", ggtheme = theme_minimal(),
font.main = c(32, "bold"), font.x = c(28), font.y = c(28),
font.tickslab = c(28),font.legend = c(28), font.text = c(28, "bold")
)
ggsurvplot(
fit, pval = TRUE, pval.size = 6, linetype = "strata", ggtheme = theme_minimal(),
font.main = c(32, "bold"), font.x = c(28), font.y = c(28),
font.tickslab = c(28),font.legend = c(28), font.text = c(28, "bold")
)
ggsurvplot(
fit, pval = TRUE, pval.size = 6, linetype = "strata", ggtheme = theme_minimal(),
font.main = c(32, "bold"), font.x = c(28), font.y = c(28),
font.tickslab = c(28),font.legend = c(28), font.text = c(28, "bold"), font.caption = c(28, "bold")
)
ggsurvplot(
fit, pval = FALSE, linetype = "strata", ggtheme = theme_minimal(),
font.tickslab = c(28),font.legend = c(28), font.text = c(28, "bold"), font.caption = c(28, "bold")
)
ggsurvplot(
fit, pval = FALSE, linetype = "strata", ggtheme = theme_minimal(),
font.main = c(32, "bold"), font.x = c(28), font.y = c(28),
font.tickslab = c(28),font.legend = c(28), font.text = c(28, "bold"), font.caption = c(28, "bold")
)
ggsurvplot(
fit, pval = FALSE, linetype = "strata", ggtheme = theme_minimal(),
font.main = c(32, "bold"), font.x = c(28), font.y = c(28),
font.tickslab = c(28),font.legend = c(28), font.text = c(28, "bold"), font.caption = c(28, "bold")
)
ggsave(filename = "figures/KM_plot.pdf")
ggsurvplot(fit, pval = FALSE, linetype = "strata", ggtheme = theme_minimal())
fit <- survfit(Surv(time, status_os) ~ ulcer, data = melanoma)
ggsurvplot(
fit, pval = FALSE, conf.int = TRUE, linetype = "strata", ggtheme = theme_minimal(),
font.main = c(32, "bold"), font.x = c(28), font.y = c(28),
font.tickslab = c(28),font.legend = c(28), font.text = c(28, "bold"), font.caption = c(28, "bold")
)
ggsave(filename = "figures/KM_plot.pdf")
fit <- survfit(Surv(time, status_os) ~ ulcer, data = melanoma)
ggsurvplot(fit, pval = FALSE, conf.int = TRUE, linetype = "strata", ggtheme = theme_minimal())
# Part b)
surv_diff <- survdiff(Surv(time, status_os) ~ ulcer, data = melanoma)
surv_diff
# Part c)
res.cox <- coxph(Surv(time, status_os) ~ ulcer, data = melanoma)
res.cox
melanoma
# Part c)
res.cox <- coxph(Surv(time, status_os) ~ ulcer + year + age + sex + thickness, data = melanoma)
res.cox
